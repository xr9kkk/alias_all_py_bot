from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import json
import os

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
MEMBERS_FILE = 'members.json'

def load_members():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞"""
    if os.path.exists(MEMBERS_FILE):
        with open(MEMBERS_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    return {}

def save_member(chat_id, user_id, username, first_name):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    members = load_members()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ID –≤ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è JSON
    chat_key = str(chat_id)
    user_key = str(user_id)
    
    if chat_key not in members:
        members[chat_key] = {}
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    members[chat_key][user_key] = {
        'username': username,
        'first_name': first_name or '–£—á–∞—Å—Ç–Ω–∏–∫'
    }
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
    with open(MEMBERS_FILE, 'w', encoding='utf-8') as f:
        json.dump(members, f, ensure_ascii=False, indent=2)

def get_all_members(chat_id):
    """–ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞"""
    members = load_members()
    chat_key = str(chat_id)
    return members.get(chat_key, {})

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start"""
    await update.message.reply_text(
        "ü§ñ –ë–æ—Ç –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ @all –≤ –ª—é–±–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –∏ –±–æ—Ç —É–ø–æ–º—è–Ω–µ—Ç –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞.\n\n"
        "–ë–æ—Ç –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø–∏—à—É—Ç —Å–æ–æ–±—â–µ–Ω–∏—è."
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    await update.message.reply_text(
        "üìñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:\n\n"
        "‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ @all –≤ –ª—é–±–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ - —É–ø–æ–º—è–Ω—É—Ç—Å—è –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏\n"
        "‚Ä¢ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
        "‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–∏ –±–µ–∑ username –±—É–¥—É—Ç —É–ø–æ–º—è–Ω—É—Ç—ã –ø–æ –∏–º–µ–Ω–∏\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        "/members - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
    )

async def members_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /members - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    chat_id = update.message.chat_id
    members = get_all_members(chat_id)
    
    if members:
        member_list = "üìã –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n\n"
        for user_id, user_data in members.items():
            username = user_data.get('username')
            first_name = user_data.get('first_name', '–£—á–∞—Å—Ç–Ω–∏–∫')
            
            if username:
                member_list += f"‚Ä¢ @{username} ({first_name})\n"
            else:
                member_list += f"‚Ä¢ {first_name} (–±–µ–∑ username)\n"
        
        await update.message.reply_text(member_list)
    else:
        await update.message.reply_text("‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ!")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if not update.message or not update.message.text:
        return
    
    chat_id = update.message.chat_id
    user = update.message.from_user
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
    save_member(chat_id, user.id, user.username, user.first_name)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ @all –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if '@all' in update.message.text.lower():
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
        members = get_all_members(chat_id)
        
        if members:
            mentions = []
            for user_id, user_data in members.items():
                username = user_data.get('username')
                first_name = user_data.get('first_name', '–£—á–∞—Å—Ç–Ω–∏–∫')
                
                if username:
                    mentions.append(f"@{username}")
                else:
                    mentions.append(f"[{first_name}](tg://user?id={user_id})")
            
            # –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
            mention_text = " ".join(mentions)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ (—Ä–µ–ø–ª–∞–µ–º –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
            await update.message.reply_text(
                f"üì¢ **–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!**\n\n{mention_text}",
                parse_mode='Markdown'
            )
        else:
            await update.message.reply_text(
                "‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–∞–ø–∏—à—É—Ç —Å–æ–æ–±—â–µ–Ω–∏—è."
            )

async def track_new_members(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    if update.message.new_chat_members:
        chat_id = update.message.chat_id
        
        for user in update.message.new_chat_members:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö
            save_member(chat_id, user.id, user.username, user.first_name)
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        new_members = ", ".join([f"@{user.username}" if user.username else user.first_name 
                               for user in update.message.new_chat_members])
        
        await update.message.reply_text(
            f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {new_members}!\n\n"
            f"–ë–æ—Ç –∑–∞–ø–æ–º–Ω–∏–ª –≤–∞—Å –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–π @all"
        )

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ó–ê–ú–ï–ù–ò–¢–ï 'YOUR_BOT_TOKEN' –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω!
    TOKEN = "7824236122:AAHpTPxaFfJZudfRS9i1tD5EjJtg04uN2zo"
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("members", members_command))
    application.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, track_new_members))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    application.run_polling()

if __name__ == '__main__':
    main()